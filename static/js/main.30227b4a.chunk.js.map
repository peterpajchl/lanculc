{"version":3,"sources":["components/currencySelector.js","components/client.js","components/service.js","components/suppliers.js","components/margin.js","ratesService.js","App.js","reportWebVitals.js","index.js"],"names":["CurrencySelector","selected","rates","onChange","value","ev","currentTarget","map","item","ClientRate","onUpdate","useState","rate","setRate","amount","setAmount","useEffect","clientRate","parseFloat","console","log","length","className","type","min","id","placeholder","rateCode","find","r","Intl","NumberFormat","style","currency","format","Service","service","updateItem","removeItem","index","name","description","s","onClick","Suppliers","services","setServices","total","setTotal","copy","filter","i","arr","reduce","previous","current","calculateTotalCost","action","method","Margin","supplierCost","a","fetch","res","json","base","lastUpdated","getRemoteRates","App","setClientRate","setSupplierCost","setRates","then","Object","entries","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30227b4a.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction CurrencySelector({ selected, rates, onChange }) {\n\n  return (\n    <select value={selected} onChange={(ev) => onChange(ev.currentTarget.value)}>\n      {rates.map(item => <option key={item[0]} value={item[0]}>{item[0]}</option>)}\n    </select>\n  );\n\n}\n\nexport default CurrencySelector;","import React, { useState, useEffect } from 'react';\nimport CurrencySelector from './currencySelector';\n\nfunction ClientRate({ rates, onUpdate}) {\n\n  const [rate, setRate] = useState([]);\n  const [amount, setAmount] = useState(0);\n\n  useEffect(() => {\n    const clientRate = parseFloat(amount) / rate[1];\n    console.log('client: broadcast client amount', parseFloat(amount), rate[1], clientRate);\n    onUpdate(clientRate);\n  }, [onUpdate, amount, rate]);\n\n  function onRateChange(rateCode) {\n    console.log('client: explicit rate changed', rateCode);\n    const rate = rates.find((r) => r[0] === rateCode);\n    setRate(rate);\n  };\n\n  useEffect(() => {\n    console.log('client: rates refreshed');\n    if (rates && rates.length) {\n      console.log('client: setting default rate to ', rates[0]);\n      setRate(rates[0]);\n    }\n  }, [rates]);\n\n  return (\n    <div>\n      <h3>What you charged client</h3>\n      <form className=\"client-form\">\n        <input type=\"number\" min=\"0\" id=\"client-cost-rate\" value={amount} onChange={(ev) => setAmount(ev.currentTarget.value)} placeholder=\"e.g. 0.15\" />\n        <CurrencySelector selected={rate ? rate[0] : ''} rates={rates} onChange={onRateChange} />\n        <span>{rate.length === 0 ? 0 : new Intl.NumberFormat('en-IN', {style: 'currency', currency: rate[0]}).format(rate[1])}</span>\n      </form>\n    </div>\n  );\n}\n\nexport default ClientRate;\n","import React, { useState, useEffect } from 'react';\nimport CurrencySelector from './currencySelector';\n\nfunction Service({rates, service, updateItem, removeItem, index}) {\n\n  const [rate, setRate] = useState([]);\n\n  const updateDescription = (ev) => {\n    const s = {\n      ...service,\n      description: ev.currentTarget.value\n    };\n    console.log('will update service-desc at index', index, s);\n    updateItem(index, s);\n  };\n\n  const updateAmount = (ev) => {\n    const s = {\n      ...service,\n      amount: ev.currentTarget.value\n    };\n    console.log('service: will update service-amount at index', index, s);\n    updateItem(index, s);\n  };\n\n  function onChangeRate(rateCode) {\n    console.log('service: explicit rate changed', rateCode);\n    const rate = rates.find((r) => r[0] === rateCode);\n    setRate(rate);\n    const s = {\n      ...service,\n      rate\n    };\n    console.log('service: will update service-rate at index', index, s);\n    updateItem(index, s);\n  }\n\n  useEffect(() => {\n    console.log('service changed', service);\n  }, [service]);\n\n  useEffect(() => {\n    console.log(`service ${index}: rates refreshed`);\n    if (rates && rates.length) {\n      console.log(`service ${index}: setting default rate to ${rates[0]}`);\n      setRate(rates[0]);\n    }\n  }, [rates, index]);\n\n  return (\n    <li className=\"service-row\">\n      <span className=\"service-row__index\">{index + 1}.</span>\n      <input className=\"service-row__description\" name=\"description\" type=\"text\" value={service.description} onChange={updateDescription} placeholder=\"Review\" />\n      <input className=\"service-row__amount\" name=\"amount\" type=\"number\" min=\"0\" value={service.amount} onChange={updateAmount} placeholder=\"0.08\" />\n      <CurrencySelector selected={rate ? rate[0] : ''} rates={rates} onChange={onChangeRate} />\n      <span className=\"service-row__rate\">{service.rate.length === 0 ? 0 : new Intl.NumberFormat('en-IN', {style: 'currency', currency: service.rate[0]}).format(service.rate[1])}</span>\n      <button type=\"button\" onClick={() => removeItem(index)}>&times;</button>\n    </li>\n  );\n}\n\nexport default Service;\n","import React, { useState, useEffect } from 'react';\nimport Service from './service';\n\nfunction Suppliers({ rates, onUpdate}) {\n  const [services, setServices] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  const addItem = () => {\n    console.log('suppliers: add item');\n    const service = {\n      description: '',\n      amount: 0,\n      rate: ['GBP', 1]\n    };\n    setServices([...services, service]);\n  };\n\n  const updateItem = (index, item) => {\n    console.log('suppliers: update item');\n    const copy = [...services];\n    copy[index] = item;\n    setServices(copy);\n  };\n\n  const removeItem = (index) => {\n    console.log('suppliers: remove item at index ', index);\n    setServices(services.filter((item, i) => i !== index));\n  }\n\n  function calculateTotalCost(arr) {\n    const total = arr.reduce((previous, current) => previous += current.amount / current.rate[1], 0);\n    console.log('suppliers: total ', total);\n    return total;\n  }\n\n  // calculate margin and broadcast\n  useEffect(() => {\n    console.log('suppliers: effect set total');\n    if (services.length === 0) {\n      setTotal(0);\n    } else {\n      setTotal(calculateTotalCost(services));\n    }\n  }, [onUpdate, services]);\n\n  useEffect(() => {\n    console.log('suppliers: broadcast total');\n    onUpdate(total);\n  }, [onUpdate, total]);\n\n  return (\n    <div>\n      <h3>Paid out to suppliers per service</h3>\n      <form action=\"/\" method=\"post\" className=\"service-form\">\n        <ol className=\"service-list\">\n          {services.map((s, i) => <Service rates={rates} service={s} key={i} updateItem={updateItem} removeItem={removeItem} index={i} />)}\n        </ol>\n      </form>\n      <div className=\"total-bar\">\n        <button className=\"primary-button\" type=\"button\" onClick={addItem}>Add item</button>\n        <span>Total: {total}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Suppliers;\n","import React, { useEffect } from 'react';\n\nfunction Margin({clientRate, supplierCost}) {\n\n  useEffect(() => {\n    console.log('margin: ', clientRate, supplierCost);\n  }, [clientRate, supplierCost]);\n\n  return(\n    <div>\n      <h3>Margin</h3>\n      <div className=\"margin__value\">{clientRate > 0 ? ((clientRate - supplierCost) / clientRate) * 100 : 0} %</div>\n    </div>\n  );\n}\n\nexport default Margin;","// Module to provide API for exchange rates\n\nasync function getRemoteRates(baseCurrency = \"GBP\") {\n  const res = await fetch('https://v6.exchangerate-api.com/v6/427cd3ffeae153ee12b4834e/latest/GBP');\n  const json = await res.json();\n  //console.log('rates', json);\n  return {\n    base: json['base_code'],\n    rates: json['conversion_rates'],\n    lastUpdated: json['time_last_update_unix']\n  };\n}\n\nexport default getRemoteRates;","import './App.css';\nimport ClientRate from './components/client';\nimport Suppliers from './components/suppliers';\nimport Margin from './components/margin';\nimport React, { useState, useEffect } from 'react';\nimport getRemoteRates from './ratesService';\n\nfunction App() {\n\n  const [clientRate, setClientRate] = useState(0);\n  const [supplierCost, setSupplierCost] = useState(0);\n  const [rates, setRates] = useState([]);\n\n  useEffect(() => {\n    console.log('#1 - get rates');\n    getRemoteRates().then((res) => {\n      const rates = Object.entries(res.rates);\n      setRates(rates);\n    });\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <ClientRate rates={rates} onUpdate={setClientRate} />\n      {<Suppliers rates={rates} onUpdate={setSupplierCost} />}\n      {<Margin clientRate={clientRate} supplierCost={supplierCost} />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}